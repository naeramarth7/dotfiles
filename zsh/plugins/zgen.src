#!/usr/bin/env zsh

# Taken from https://github.com/unixorn/zsh-quickstart-kit

echo -en "\r\033[K >> zgen.src start"

source $ZDOTDIR/zgen/zgen.zsh

load-plugins() {
  echo -en "\r\033[K >>> creating zgen init.sh"
  ZGEN_LOADED=()
  ZGEN_COMPLETIONS=()

  zgen oh-my-zsh

  # If zsh-syntax-highlighting is bundled after zsh-history-substring-search,
  # they break, so get the order right.
  zgen load zsh-users/zsh-syntax-highlighting
  zgen load zsh-users/zsh-history-substring-search

  # Set keystrokes for substring searching
  zmodload zsh/terminfo
  bindkey "$terminfo[kcuu1]" history-substring-search-up
  bindkey "$terminfo[kcud1]" history-substring-search-down

  ##
  # Functional plugins
  ##

  # `cd` on steroids
  # zgen load rupa/z

  # `z` for vim
  # zgen load rupa/vim

  # `ls` on steroids
  zgen load rimraf/k

  # zgen oh-my-zsh plugins/colorize

  # Automatically run zgen update and zgen selfupdate every 7 days
  zgen load unixorn/autoupdate-zgen

  zgen load unixorn/jpb.zshplugin

  # Warn you when you run a command that you've got an alias for
  zgen load djui/alias-tips

  # Tom Limoncelli's tooling for storing private information (keys, etc)
  # in a repository securely by encrypting them with gnupg
  # zgen load StackExchange/blackbox

  # Load some oh-my-zsh plugins
  zgen oh-my-zsh plugins/brew
  zgen oh-my-zsh plugins/brew-cask
  zgen oh-my-zsh plugins/jira
  zgen oh-my-zsh plugins/osx
  zgen oh-my-zsh plugins/pip
  # zgen oh-my-zsh plugins/sudo
  zgen oh-my-zsh plugins/web-search

  # zgen load chrissicool/zsh-256color
  zgen load Tarrasch/zsh-autoenv

  # Load more completion files for zsh from the zsh-lovers github repo
  zgen load zsh-users/zsh-completions src

  # git and git-flow completion
  zgen load bobthecow/git-flow-completion

  # Fish-like fast/unobtrusive autosuggestions for zsh.
  zgen load zsh-users/zsh-autosuggestions

  # Load me last
  GENCOMPL_FPATH=/usr/local/share/zsh/site-functions

  # Very cool plugin that generates zsh completion functions for commands
  # if they have getopt-style help text. It doesn't generate them on the fly,
  # you'll have to explicitly generate a completion, but it's still quite cool.
  # zgen load RobSis/zsh-completion-generator

  # Prompt theme
  # zgen load robbyrussell/oh-my-zsh themes/miloshadzic
  zgen load therealklanni/purity

  # Save it all to init script
  zgen save > /dev/null
}

# This comes from https://stackoverflow.com/questions/17878684/best-way-to-get-file-modified-time-in-seconds
# This works on both Linux with GNU fileutils and OS X with BSD stat.
get_file_modification_time() {
  modified_time=$(stat -c %Y "$1" 2> /dev/null)
  if [ "$?" -ne 0 ]; then
    modified_time=$(stat -f %m "$1" 2> /dev/null)
    if [ "$?" -ne 0 ]; then
      modified_time=$(date -r "$1" +%s 2> /dev/null)
      [ "$?" -ne 0 ] && modified_time=0
    fi
  fi
  echo "$modified_time"
}

# check if there's an init.zsh file for zgen and generate one if not.
if [ ! -e ~/.zgen/init.zsh ]; then
  load-plugins
fi

# Our installation instructions get the user to make a symlink
# from ~/.zgen-setup to wherever they checked out the zsh-quickstart-kit
# repository. Unfortunately, stat will return the modification time of the
# symlink instead of the target file, so construct a full path to hand off
# to stat so it returns the modification time of the actual .zgen-setup file.
REAL_ZGEN_SETUP="$(test -L "$0" && readlink "$0" || echo "$0")"

# If .zgen-setup is newer than init.zsh, regenerate init.zsh
if [ $(get_file_modification_time ${REAL_ZGEN_SETUP}) -gt $(get_file_modification_time ~/.zgen/init.zsh) ]; then
  echo -en "\r\033[K >>> zgen config updated"
  load-plugins
fi
unset REAL_ZGEN_SETUP

echo -en "\r\033[K >> zgen.src end"
